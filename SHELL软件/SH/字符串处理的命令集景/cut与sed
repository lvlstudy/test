
cut与sed实例.docx
百度网盘云一朵
6
/ 24
Linux 基础 No.25：shell 相关--cut 命令&set 流编辑器
原创 超凡奇才 dmistudy 2022-11-27 16:35 发表于河南
收录于合集
#linux33 个
#shell10 个
cut 命令作用：显示行中的指定部分，删除文件中的指定字段。1、显示文件的内容；
2、连接 2 个或多个文件语法：cut(选项)(参数)
选项
-b 仅显示行中指定范围的字节数
-c 仅显示行中指定范围的字符
-d 指定字段的分隔符，默认的字段分隔符为“TAB”
-f 显示指定字段的内容


输出系统中所有用户名 cut -f1 -d ":" /etc/passwd
上面几张图片可以有的伙伴没看太懂，没关系，下面具体讲解一下格式和用法





用法 cut:可以将一串字符作为列来显示，字符字段的记法：N-：从第 N 个字节、字
符、字段到结尾；N-M：从第 N 个字节、字符、字段到第 M 个（包括 M 在内）字节、
字符、字段；-M：从第 1 个字节、字符、字段到第 M 个（包括 M 在内）字节、字
符、字段。


















-f 表示定义字段。-b 表示字节；-c 表示字符；如：打印第 1 个到第 3 个字符：
[root@dm-centos8 ~]# cut -c1-3 /etc/passwd
打印前 2 个字符：[root@dm-centos8 ~]# cut -c-2 /etc/passwd
打印从第 2 个字符开始到结尾：[root@dm-centos8 ~]# cut -c2- /etc/passwd
打 印 第 1 个 到 第 3 个 字 段 ： [root@dm-centos8 ~]# cut -f1-3 -d":"
/etc/passwd
打 印 从 第 2 个 字 段 开 始 到 结 尾 ： [root@dm-centos8 ~]# cut -f2- -d":"
/etc/passwd
把 2 个文件中的内容合并到第三个文件







[root@dm-centos8 ~]# echo a:b:c:d > a.txt[root@dm-centos8 ~]# echo
e:f:g:h > b.txt[root@dm-centos8 ~]# cut -f1 a.txt b.txt >
c.txt[root@dm-centos8 ~]# cat c.txt a:b:c:de:f:g:h[root@dm-centos8 ~]#
把 2 个文件中的 f2 字段的内容合并到第三个文件







[root@dm-centos8 ~]# echo a:b:c:d > a.txt[root@dm-centos8 ~]# echo
e:f:g:h > b.txt[root@dm-centos8 ~]# cut -f2 -d":" a.txt b.txt > c.txt
[root@dm-centos8 ~]# cat c.txt bf[root@dm-centos8 ~]#
set 流编辑器







官方解释：1、sed 编辑器是一行一行的处理文件内容的。正在处理的内容存放在模
式空间(缓冲区)内，处理完成后按照选项的规定进行输出或文件的修改。接着处理下
一行，这样不断重复，直到文件末尾。文件内容并没有改变，除非你使用重定向存储
输出。sed 主要用来自动编辑一个或多个文件；简化对文件的反复操作；sed 也是支
持正则表达式的，如果要使用扩展正则加参数-r
set 的执行过程 1、读一行数据(一次读取一行数据)2、匹配数据(根据我们提供的规则
来匹配相关的数据,查找等等)3、修改数据(按照命令修改数据流中的数据，比如替
换)4、输出数据(将结果进行输出)5、重复前 4 步

语法格式：sed [options] ‘[commands]’ filename
示例：











[root@dm-centos8 ~]# echo "this is apple" | sed 's/apple/dog/'this is
dog[root@dm-centos8 ~]# echo "this is ap/ple " | sed 's@ap/ple@dog@'this
is dog [root@dm-centos8 ~]# echo "this is ap/ple " | sed
's/ap\/ple/dog/'this is dog [root@dm-centos8 ~]# echo "this is apple"
> a.txt[root@dm-centos8 ~]# sed 's/apple/dog/' a.txtthis is
dog[root@dm-centos8 ~]# cat a.txt this is apple
附上链接：Linux 常用命令 4 直接搜索`文本替换`关键词
个人理解，不足之处，请大神私聊多多指教
set 流编辑器你可以理解为与 vim 编辑器有很多相似点 vim 编辑器可以在 vim 打开
文件后进项文本替换操作 set 可以直接读取文件进行处理并且具有插入、替换、删除、
打印等功能(深层的区别，不懂啊，先会用再说。O(∩_∩)O 哈哈~)
set 命令参数：(命令操作的对象叫参数，选项是对操作的过程做个修饰。)
选项：
-a 在当前行下面插入文件
-n 读取下一个输入行，用下一个命令处理新的行而不是用第一个命令（取消默认输出）
-e 执行多个 sed 指令
-f 运行脚本
-i 编辑文件内容
-i.bak 编辑的同时创造.bak 的备份
-r 使用扩展的正则表达式
命令：
i 在当前行上面插入文件
c 把选定的行改为新的指定的文本
p 打印
d 删除
r/R 读取文件/一行
w 另存
s 替换指定字符
(以下命令了解即可)
h 拷贝模板块的内容到内存中的缓冲区
H 追加模板块的内容到内存中的缓冲区
g 获得内存缓冲区的内容，并替代当前模板块中的文本
G 获得内存缓冲区的内容，并追加到当前模板块文本的后面
D 删除\n 之前的内容
P 打印\n 之前的内容
替换标记
数字： 表明新文本将替换第几处模式匹配的地方
g： 表示新文本将会替换所有匹配的文本子串
\1： 匹配标记，前面搜索可以用元字符集\(..\)
&： 保留搜索到的字符用来替换其它字符
set 匹配字符集
^ 匹配行开始，如：/^sed/匹配所有以 sed 开头的行
$ 匹配行结束，如：/sed$/匹配所有以 sed 结尾的行
. 匹配一个非换行符的任意字符，如：/s.d/匹配 s 后接一个任意字符，最后是 d
* 匹配 0 个或多个字符，如：/*sed/匹配所有模板是一个或多个空格后紧跟 sed 的行
例 1：s 只替换第一个匹配到的字符，将 passwd 中的 root 用户替换成
sundance






[root@dm-centos8 ~]# cp /etc/passwd ./cp ： 是 否 覆 盖 './passwd' ？
y[root@dm-centos8 ~]# sed 's/root/sundance/' passwd | grep
sundancesundance:x:0:0:root:/root:/bin/bashoperator:x:11:0:operator:/
sundance:/sbin/nologin[root@dm-centos8 ~]#
6
